name: Build and deploy Python app to Azure Web App

on:
  push:
    branches:
      - producao
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      # NÃO vamos criar venv ou instalar pacotes aqui.
      # Apenas limpamos os arquivos que não queremos enviar.
      - name: Cleaning testing files
        run: |
          rm -f db.sqlite3
          rm -f .env
      
      # Compactamos o código-fonte LIMPO
      - name: Zip artifact for deployment
        run: zip release.zip . -r -x "venv/*" -x ".git/*" -x "__pycache__/*"

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: release.zip # Apenas o zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app
      
      # O 'unzip' foi removido, a action de deploy usa o zip diretamente.
      # - name: Unzip artifact for deployment
      #   run: unzip release.zip

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'cineestante-app'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE }}
          package: release.zip # Dizemos para a action usar o zip
          
          # --- ESTA É A MÁGICA ---
          # 1. Diz para a Azure rodar o build (instalar o requirements.txt) LÁ NO SERVIDOR
          scm-do-build-during-deployment: true
          
          # 2. Roda os comandos DEPOIS que a Azure instalar os pacotes
          post-build-command: |
            echo "Build finalizado, rodando migrações..."
            python manage.py migrate
            echo "Migrações finalizadas, populando filmes..."
            python manage.py popular_filmes
            echo "Comandos pós-build finalizados."
